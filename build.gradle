plugins {
    id 'java'
}

group 'cz.seznam.fulltext.example.'
version '1.0-SNAPSHOT'

ext {
    javaSourceCompatibility = JavaVersion.VERSION_21
    javaTargetCompatibility = JavaVersion.VERSION_21
    prometheusVersion = '1.3.6'
    slf4jVersion = "2.0.13"
    log4jVersion = "1.2.17"
    junitPlatformVersion = '5.9.1'
    
    mockitoVersion = '4.8.0'
}

dependencies {
    implementation "io.prometheus:prometheus-metrics-core:${prometheusVersion}"
    implementation "io.prometheus:prometheus-metrics-instrumentation-jvm:${prometheusVersion}"
    implementation "io.prometheus:prometheus-metrics-exporter-httpserver:${prometheusVersion}"

    // logging
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    runtimeOnly "log4j:log4j:${log4jVersion}"
    runtimeOnly "org.slf4j:slf4j-reload4j:${slf4jVersion}"
    testRuntimeOnly "org.slf4j:slf4j-simple:${slf4jVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitPlatformVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitPlatformVersion}"
    testImplementation "org.junit.vintage:junit-vintage-engine:${junitPlatformVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitPlatformVersion}"
}

// add lombok
final String lombok = "org.projectlombok:lombok:1.18.30";
project.getDependencies().add(JavaPlugin.ANNOTATION_PROCESSOR_CONFIGURATION_NAME, lombok);
project.getDependencies().add(JavaPlugin.COMPILE_ONLY_CONFIGURATION_NAME, lombok);
project.getDependencies().add(JavaPlugin.TEST_ANNOTATION_PROCESSOR_CONFIGURATION_NAME, lombok);
project.getDependencies().add(JavaPlugin.TEST_COMPILE_ONLY_CONFIGURATION_NAME, lombok);


repositories {
    mavenLocal()
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

task copyDependencies(type: Copy) {
    from configurations.runtimeClasspath
    into "$buildDir/libs"
}

build.dependsOn copyDependencies

tasks.named('wrapper') {
    gradleVersion = '8.13'
    distributionType = Wrapper.DistributionType.ALL
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}
